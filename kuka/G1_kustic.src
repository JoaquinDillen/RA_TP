&ACCESS RVP
&REL 641
&PARAM DISKPATH = KRC:\R1\Program\_G2_WELD
DEF G1_kustic( )

;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3 
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  
    
  ;FOLD USER INI
    ;Make your modifications here



  ;ENDFOLD (USER INI)
  ;ENDFOLD (INI)

;fold Jobinfo
      ;Job information : Advanced Robotics  Group 1
      ;Date: 2022-07-25
      ;Project name: Kustic
      ;Author: André Moreira, Joaquin Dillen, Nuno Fernandes
      ;Company: IPCA
      ;Division: MEEC
  ;ENDFOLD ;fold 

;FOLD ROBOT TOOL
$TOOL = TOOL_DATA[2]
$BASE = BASE_DATA[1]
  ;ENDFOLD

;FOLD INITIALIZATIONS
;LOCAL VARIABLES

;RESET VARIABLES
KUSTIC_EMERGENCY2 = TRUE
KUSTIC_START = FALSE
KUSTIC_CALIBRATE = FALSE

;RESET BASE
      
;RESET STRUCS
FOR I=1 TO MUSIC_SIZE
  POINTS[I].POINT = {X 0.0, Y 0.0, Z 35.0, A -110, B 0.0, C 169}
  POINTS[I].TEMPO = 0
ENDFOR

;RESET TOOL

;INTERRUPTS
INTERRUPT DECL 1 WHEN $IN[1]==FALSE DO EMERGENCY()
INTERRUPT DECL 2 WHEN KUSTIC_EMERGENCY2==FALSE DO EMERGENCY()
INTERRUPT ON
;ADVANCE
$ADVANCE = 3
      
PTP $POS_ACT

  ;ENDFOLD

;FOLD CALIBRATION
IF (KUSTIC_CALIBRATE == TRUE) THEN
  KUSTIC_CALIBRATE = FALSE
ENDIF
;ENDFOLD

;GO TO HOME
;FOLD HOME  
HOME()
;ENDFOLD

  

  ;MAIN LOOP
  LOOP
    

FOR I=1 TO MUSIC_SIZE
  POINTS[I].POINT = {X 0.0, Y 0.0, Z 35.0, A -110, B 0.0, C 169}
  POINTS[I].TEMPO = 0
ENDFOR

    $LOOP_MSG[]= " WAITING FOR START "
    
    ;WAIT FOR START FROM INTERFACE
    WAIT FOR (KUSTIC_START)
    ;RESET START AND STOP BITS
    KUSTIC_START = FALSE
    KUSTIC_STOP = FALSE
    KUSTIC_PLAYING_STATUS = TRUE
    
    ;GO TROUGH ALL NOTES OF THE SONG
    FOR I=1 TO MUSIC_SIZE
    
      ;IF STOP WAS PRESSED OR LAST NOTE WAS PLAYED EXIT LOOP
      IF ((KUSTIC_STOP) OR (POINTS[I].TEMPO==0)) THEN
        EXIT
      ENDIF
      
      ;IF THE CURRENT POINT ISN'T THE FIRST OR LAST
      IF ((I > 1) AND (I < MUSIC_SIZE)) THEN
        ;CALCULATE THE POINT IN BETWEEN THE CURRENT POINT AND THE NEXT POINT
        AUX = POINTS[I].POINT
        AUX.X = (POINTS[I].POINT.X + POINTS[I+1].POINT.X) / 2 
        ;PTP AUX CONT ;C_DIS
      ENDIF
          
      ;GO TO NOTE
      PTP POINTS[I].POINT
      
      ;STRUM GUITAR STRING
      STRUM()
      
    
    ENDFOR

;GO TO HOME
    ;FOLD HOME
    HOME()
    ;ENDFOLD
  
  ENDLOOP
  
END


DEF STRUM()
;PRESSED STRING
IF POINTS[I].POINT.X >= 0 THEN

  ;LIN {A -118, C 170} C_DIS

  ;LOWER TOOL TO STRING
  LIN {Z -25} C_DIS

  ;ROTATE TOOL TO STRUM STRING
  ;LIN {A -118 ,C 170} C_DIS

  ;$VEL.CP=0.1

  ;LIN {Z -18} C_DIs

  ;LIN {A -112,C 170} C_DIS

  ;LIN {A -118, C 169} C_DIS


  ;WAIT TO KEEP UP WITH THE TEMPO OF THE MUSIC
  WAIT SEC POINTS[I].TEMPO

;OPEN STRING
ELSE
  ;STRUM WITHOUT PRESSING STRING
  LIN {Z -13} C_DIS
  LIN {C 160} C_DIS
  ;ROTATE TOOL TO STRUM STRING WITHOT PRESS
  LIN {A -118, C 165} C_DIS  
  ;WAIT TO KEEP UP WITH THE TEMPO OF THE MUSIC
  WAIT SEC POINTS[I].TEMPO
ENDIF


LIN{Z 10} C_DIS

;$VEL.CP=2

END


DEF EMERGENCY()

BRAKE
WHILE NOT KUSTIC_EMERGENCY
  ;WAIT FOR EMERGENCY TO END
ENDWHILE

END


DEF HOME()

;FOLD PTP HOME_KUSTIC Vel=10 % PDAT19;%{PE}%R 8.2.24,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME_KUSTIC, 3:, 5:10, 7:PDAT19
$BWDSTART=FALSE
PDAT_ACT=PPDAT19
FDAT_ACT=FHOME_KUSTIC
BAS(#PTP_PARAMS,10)
PTP XHOME_KUSTIC 
;ENDFOLD

KUSTIC_PLAYING_STATUS = FALSE

END